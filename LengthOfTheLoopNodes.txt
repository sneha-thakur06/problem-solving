import java.util.*;
class LoopNode{
    int data;
    LoopNode next;
    LoopNode(int data){
        this.data=data;
        this.next=null;
    }

}

public class DetectALoop {
    public static LoopNode arrToLinked(int[] arr){
        LoopNode head=new LoopNode(arr[0]);
        LoopNode temp=head;
        for(int i=1;i<arr.length;i++){
            LoopNode num=new LoopNode(arr[i]);
            temp.next=num;
            temp=num;
        }
        return head;
    }

    public static int lengthOfTheLoop(LoopNode head){
        int timer=0;
        LoopNode temp=head;
        HashMap<LoopNode,Integer> hmp=new HashMap<>();
        while(temp!=null){
            if(hmp.containsKey(temp)){
                int val=hmp.get(temp);
                return timer-val;
            }
            hmp.put(temp,timer);
            timer++;
            temp=temp.next;
        }
        return 0;
    }

   public static void main(String[] args) {
        int[] arr={1,2,3,4,5,6,7,8,9};
        LoopNode head=arrToLinked(arr);
        head.next.next.next.next.next.next.next.next = head.next.next;

        int result=lengthOfTheLoop(head);

        System.out.println(result);
    }
}