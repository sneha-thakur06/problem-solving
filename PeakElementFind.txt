class Solution {

    public int peakElement(int[] arr) {
        
        // for(int i=0;i<arr.length;i++){
        //     boolean left=true;
        //     boolean right=true;
        //     if(i>0 && arr[i]<=arr[i-1]){
        //         left=false;
        //     }
            
        //     if(i<arr.length-1 && arr[i]<=arr[i+1]){
        //         right=false;
        //     }
        //     if(left && right){
        //         return i;
        //     }  
        // }
        // return 0;
        
        int n=arr.length;
        if(n==0){
            return 0;
        }
        if(n==1){
            return 0;
        }
        
        if(arr[0]>arr[1]){
            return 0;
        }
        if(arr[n-1]>arr[n-2]){
            return n-1;
        }
        int low=1;
        int high=n-2;
        while(low<=high){
            int mid=low+(high-low)/2;
            if(arr[mid]<arr[mid+1]){
                low=mid+1;
            }
            else{
                high=mid-1;
            }
            if(arr[mid]>arr[mid+1] && arr[mid] > arr[mid-1]){
                return mid;
            }
        }
        
        return 0;
    }
}
